// script-page3.js

// ===========================
// üì¶ –ú–∏–Ω–∏-–∫–æ—Ä–∑–∏–Ω–∞ –∏ –∫–æ—Ä–∑–∏–Ω–∞
// ===========================
document.addEventListener('DOMContentLoaded', () => {
    updateMiniCart();

    // üçî –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
    const burger = document.querySelector('.burger');
    const close = document.querySelector('.close');
    const menu = document.querySelector('.mob_content');
    const closeNav = document.querySelector('[close-nav]');
    const year = document.querySelector(".logo_desc1");
    const yearRemove = document.querySelector(".logo_desc12");

    function handleViewportChange() {
        if (window.innerWidth <= 479) {
            year?.classList.add('hidden');
            yearRemove?.classList.remove('hidden');
        } else {
            year?.classList.remove('hidden');
            yearRemove?.classList.add('hidden');
        }
    }

    handleViewportChange();
    window.addEventListener('resize', handleViewportChange);

    if (burger && close && menu) {
        burger.addEventListener('click', () => {
            burger.classList.add('hidden');
            close.classList.remove('hidden');
            menu.classList.remove('hidden');
        });

        close.addEventListener('click', () => {
            burger.classList.remove('hidden');
            close.classList.add('hidden');
            menu.classList.add('hidden');
        });

        document.addEventListener('click', (e) => {
            if (!menu.contains(e.target) && !burger.contains(e.target) && !close.contains(e.target)) {
                menu.classList.add('hidden');
                close.classList.add('hidden');
                burger.classList.remove('hidden');
            }
        });

        closeNav?.addEventListener('click', () => {
            menu.classList.add('hidden');
            close.classList.add('hidden');
            burger.classList.remove('hidden');
        });
    }

    // üîÅ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    const btnSize = document.querySelector('#btn_desc');
    const btnSpec = document.querySelector('#btn_spec');
    const sectionSize = document.querySelector('.toggle_size');
    const sectionSpec = document.querySelector('.toggle_spec');

    btnSize?.addEventListener('click', () => {
        sectionSize?.classList.remove('hidden1');
        sectionSpec?.classList.add('hidden1');
        btnSize.classList.add('hover');
        btnSpec.classList.remove('hover');
    });

    btnSpec?.addEventListener('click', () => {
        sectionSize?.classList.add('hidden1');
        sectionSpec?.classList.remove('hidden1');
        btnSize.classList.remove('hover');
        btnSpec.classList.add('hover');
    });

    // üëü –í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞
    const sizeButtons = document.querySelectorAll('.main_page3_size');
    sizeButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            sizeButtons.forEach(b => b.classList.remove('selected'));
            btn.classList.add('selected');
        });
    });

    // üõí –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    addToCartButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const selectedSizeBtn = document.querySelector('.main_page3_size.selected');
            const selectedSize = selectedSizeBtn?.textContent;

            if (!selectedSize) return alert("‚õî –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä!");

            const name = document.querySelector('.main_page_title')?.textContent.trim() || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
            // const priceText = document.querySelector('.main_page3_price')?.textContent || "0";
            // const img = document.querySelector('.main_page3_gallery_item img')?.getAttribute('src') || "";
            // const price = parseFloat(priceText.replace(/[^\d.]/g, ''));
            // 1) —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Ü–µ–Ω—É —Å –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ (data-price)
            // let price = NaN;
            // const btnPrice = parseFloat(btn.dataset.price);
            // if (!Number.isNaN(btnPrice)) {
            //     price = btnPrice;
            // } else {
            //     // 2) –∏–Ω–∞—á–µ –ø–∞—Ä—Å–∏–º —Ç–µ–∫—Å—Ç –∏–∑ .main_page3_price (—É–±–µ—Ä—ë–º –ø—Ä–æ–±–µ–ª—ã/–≥—Ä–Ω/–∑–Ω–∞–∫–∏)
            //     const raw = document.querySelector('.main_page3_price')?.textContent || "0";
            //     const normalized = raw
            //         .replace(/\u00A0|\u202F|\s/g, '') // –æ–±—ã—á–Ω—ã–µ –∏ –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
            //         .replace(',', '.')                // –∑–∞–ø—è—Ç—É—é –≤ —Ç–æ—á–∫—É
            //         .replace(/[^\d.]/g, '');          // –≤—Å—ë, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ —Ç–æ—á–∫–∏
            //     price = parseFloat(normalized);
            // }

            // –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ —Å–º–æ–≥–ª–∏ ‚Äì –Ω–µ –¥–∞—ë–º –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ NaN –≤ –∫–æ—Ä–∑–∏–Ω–µ
            // if (Number.isNaN(price)) {
            //     alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞');
            //     return;
            // }
            // ‚úÖ –ü–∞—Ä—Å–∏–º —Ü–µ–Ω—É –¢–û–õ–¨–ö–û –∏–∑ —Ç–µ–∫—Å—Ç–∞ .main_page3_price
            const priceEl = document.querySelector('.main_page3_price');
            const raw = priceEl?.textContent || '0';

            // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: —É–±–∏—Ä–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∏ –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã, –º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É,
            // –≤—ã–∫–∏–¥—ã–≤–∞–µ–º –≤—Å—ë, —á—Ç–æ –Ω–µ —Ü–∏—Ñ—Ä–∞ –∏ –Ω–µ —Ç–æ—á–∫–∞ (–≥—Ä–Ω, —Å–∏–º–≤–æ–ª—ã –∏ —Ç.–¥.)
            const normalized = raw
                .replace(/\u00A0|\u202F|\s/g, '') // –ø—Ä–æ–±–µ–ª—ã (–≤ —Ç.—á. –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ)
                .replace(',', '.')                // –¥–µ—Å—è—Ç–∏—á–Ω–∞—è –∑–∞–ø—è—Ç–∞—è -> —Ç–æ—á–∫–∞
                .replace(/[^\d.]/g, '');          // –≤—Å—ë –ª–∏—à–Ω–µ–µ

            const price = Number.parseFloat(normalized);

            if (!Number.isFinite(price)) {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞');
                return;
            }


            const img = document.querySelector('.main_page3_gallery_item img')?.getAttribute('src') || "";


            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const existing = cart.find(item => item.name === name && item.size === selectedSize);

            if (existing) {
                existing.qty++;
            } else {
                cart.push({ name, price, img, size: selectedSize, qty: 1 });
            }

            // localStorage.setItem('cart', JSON.stringify(cart));
            // emitCartUpdated();
            // updateMiniCart();

            // if (document.getElementById('cart-modal')?.style.display === 'block') {
            //     renderCartModal();
            // }
            localStorage.setItem('cart', JSON.stringify(cart));
            emitCartUpdated();
            updateMiniCart();

            // –ï—Å–ª–∏ –º–æ–¥–∞–ª–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ä–∏—Å—É–µ–º
            if (document.getElementById('cart-modal')?.style.display === 'block') {
                renderCartModal();
            }

            // –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∞—Ç—å hover/–∫–ª–∏–∫–∏ (–Ω–∞ —Å–ª—É—á–∞–π –¥–∏–Ω–∞–º–∏–∫–∏ DOM)
            if (typeof attachMiniCartHandlers === 'function') attachMiniCartHandlers();

            // –ê–≤—Ç–æ-–æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
            if (window.innerWidth <= 1024) {
                // üì± –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è ‚Äî —Å—Ä–∞–∑—É –æ—Ç–∫—Ä—ã—Ç—å
                const cartModal = document.getElementById('cart-modal');
                if (typeof renderCartModal === 'function') {
                    renderCartModal();
                    cartModal.style.display = 'block';
                }
            } else {
                // üñ• –î–µ—Å–∫—Ç–æ–ø ‚Äî —Å—ã–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å hover
                if (typeof showCartModalIfNotEmpty === 'function') {
                    showCartModalIfNotEmpty();
                }
            }

        });
    });

    // üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∏–Ω–∏-–∫–æ—Ä–∑–∏–Ω—ã
    function updateMiniCart() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        const count = cart.reduce((sum, item) => sum + item.qty, 0);
        // const miniCart = document.getElementById('mini-cart');
        // const countSpan = document.getElementById('mini-cart-count');
        const carts = [
            { box: document.getElementById('mini-cart'), countSpan: document.getElementById('mini-cart-count') },
            { box: document.getElementById('mini-cart-mob'), countSpan: document.getElementById('mini-cart-count-mob') }
        ];

        carts.forEach(({ box, countSpan }) => {
            if (!box || !countSpan) return;
            box.style.display = ''; // –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
            // countSpan.textContent = count;
            countSpan.textContent = count > 0 ? count : '';
        });
    }

    // üì¶ –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    const miniCart = document.getElementById('mini-cart');
    const cartModal = document.getElementById('cart-modal');
    const cartItems = document.getElementById('cart-items');
    const cartTotal = document.getElementById('cart-total');
    const miniCartDesktop = document.getElementById('mini-cart');     // –¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –∏–∫–æ–Ω–∫–∞
    const miniCartMobile = document.getElementById('mini-cart-mob'); // –º–æ–±–∏–ª—å–Ω–∞—è –∏–∫–æ–Ω–∫–∞




    // miniCart?.addEventListener('click', () => {
    //     const cart = JSON.parse(localStorage.getItem('cart')) || [];
    //     if (cart.length === 0) return;
    //     renderCartModal();
    //     cartModal.style.display = 'block';
    // });
    // [document.getElementById('mini-cart'), document.getElementById('mini-cart-mob')].forEach(cartEl => {
    //     cartEl?.addEventListener('click', () => {
    //         const cart = JSON.parse(localStorage.getItem('cart')) || [];
    //         if (cart.length === 0) return;
    //         renderCartModal();
    //         cartModal.style.display = 'block';
    //     });
    // });
    // ===== –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ—Ä–∑–∏–Ω—ã =====
    // function showCartModal() {
    //     const cart = JSON.parse(localStorage.getItem('cart')) || [];
    //     if (cart.length === 0) return;
    //     renderCartModal();
    //     cartModal.style.display = 'block';

    //     // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–æ–¥ –∏–∫–æ–Ω–∫–æ–π (–¥–µ—Å–∫—Ç–æ–ø)
    //     if (window.innerWidth > 1024 && miniCartDesktop && cartModal) {
    //         const rect = miniCartDesktop.getBoundingClientRect();
    //         cartModal.style.position = 'fixed';
    //         cartModal.style.top = (rect.bottom + 8) + 'px';
    //         cartModal.style.left = Math.max(8, rect.right - cartModal.offsetWidth) + 'px';
    //     }
    // }

    // function hideCartModal() {
    //     if (cartModal) cartModal.style.display = 'none';
    // }

    // let hoverHideTimer = null;

    // // üì± –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ –∫–ª–∏–∫—É
    // function handleMobileClick(el) {
    //     el?.addEventListener('click', () => {
    //         if (window.innerWidth <= 1024) {
    //             showCartModal();
    //         }
    //     });
    // }
    // handleMobileClick(miniCartMobile);
    // handleMobileClick(miniCartDesktop); // –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö –∏ –¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –∏–∫–æ–Ω–∫–∞ —Ç–æ–∂–µ –ø–æ –∫–ª–∏–∫—É

    // // üñ• –î–µ—Å–∫—Ç–æ–ø ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    // if (miniCartDesktop && cartModal) {
    //     miniCartDesktop.addEventListener('mouseenter', () => {
    //         if (window.innerWidth > 1024) {
    //             clearTimeout(hoverHideTimer);
    //             showCartModal();
    //         }
    //     });

    //     miniCartDesktop.addEventListener('mouseleave', () => {
    //         if (window.innerWidth > 1024) {
    //             hoverHideTimer = setTimeout(() => {
    //                 // –°–∫—Ä—ã–≤–∞–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—É—Ä—Å–æ—Ä –Ω–µ –Ω–∞–¥ –º–æ–¥–∞–ª–∫–æ–π
    //                 if (!cartModal.matches(':hover') && !miniCartDesktop.matches(':hover')) {
    //                     hideCartModal();
    //                 }
    //             }, 200);
    //         }
    //     });

    //     cartModal.addEventListener('mouseenter', () => {
    //         if (window.innerWidth > 1024) {
    //             clearTimeout(hoverHideTimer);
    //         }
    //     });

    //     cartModal.addEventListener('mouseleave', () => {
    //         if (window.innerWidth > 1024) {
    //             hoverHideTimer = setTimeout(() => {
    //                 if (!cartModal.matches(':hover') && !miniCartDesktop.matches(':hover')) {
    //                     hideCartModal();
    //                 }
    //             }, 150);
    //         }
    //     });
    // }

    // –ù–∞ —Ä–µ—Å–∞–π–∑ ‚Äî –∑–∞–∫—Ä—ã–≤–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ª–∏–ø–∞–ª–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –±—Ä–µ–π–∫–ø–æ–∏–Ω—Ç–∞
    // window.addEventListener('resize', () => {
    //     hideCartModal();
    // });



    // ‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    window.closeCart = () => {
        cartModal.style.display = 'none';
    };

    // üß† –†–µ–Ω–¥–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ—Ä–∑–∏–Ω—ã
    function renderCartModal() {
        const cart = JSON.parse(localStorage.getItem('cart')) || [];
        cartItems.innerHTML = '';
        let total = 0;

        if (cart.length === 0) {
            cartItems.innerHTML = '<p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>';
            cartTotal.innerHTML = '';
            updateMiniCart();
            return;
        }

        cart.forEach(item => {
            const itemTotal = item.price * item.qty;
            total += itemTotal;

            const itemDiv = document.createElement('div');
            itemDiv.classList.add('product-in-card');

            itemDiv.innerHTML = `
        <div style="display: flex; align-items: center; gap: 48px; padding: 5px 0;">
          <img src="${item.img}" style="width: 55px; height: 55px; object-fit: cover; margin:0 0 0 10px">
          <div style="flex-grow:1;">
            <div><strong>${item.name}</strong></div>
            <div>–†–æ–∑–º—ñ—Ä: ${item.size}</div>
            <div style="margin: 8px 0; display: flex; align-items: center; gap: 10px;">
              <button class="decrease-qty qty-btn" data-name="${item.name}" data-size="${item.size}">‚Äì</button>
              <span>${item.qty}</span>
              <button class="increase-qty qty-btn" data-name="${item.name}" data-size="${item.size}">+</button>
              <span>—à—Ç.</span>
            </div>
            <div><strong>${itemTotal} –≥—Ä–Ω</strong></div>
          </div>
          <button class="remove-item" data-name="${item.name}" data-size="${item.size}" title="–£–¥–∞–ª–∏—Ç—å">‚úï</button>
        </div>
      `;

            cartItems.appendChild(itemDiv);
        });

        cartTotal.innerHTML = `<strong>–î–æ —Å–ø–ª–∞—Ç–∏:</strong> ${total} –≥—Ä–Ω`;

        setupCartControls();
    }

    function setupCartControls() {
        document.querySelectorAll('.remove-item').forEach(btn => {
            btn.addEventListener('click', () => {
                const name = btn.dataset.name;
                const size = btn.dataset.size;
                let cart = JSON.parse(localStorage.getItem('cart')) || [];
                cart = cart.filter(i => !(i.name === name && i.size === size));
                localStorage.setItem('cart', JSON.stringify(cart));
                updateMiniCart();
                renderCartModal();
                if (cart.length === 0) cartModal.style.display = 'none';
            });
        });

        document.querySelectorAll('.increase-qty').forEach(btn => {
            btn.addEventListener('click', () => {
                const name = btn.dataset.name;
                const size = btn.dataset.size;
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const item = cart.find(i => i.name === name && i.size === size);
                if (item) item.qty++;
                localStorage.setItem('cart', JSON.stringify(cart));
                updateMiniCart();
                renderCartModal();
            });
        });

        document.querySelectorAll('.decrease-qty').forEach(btn => {
            btn.addEventListener('click', () => {
                const name = btn.dataset.name;
                const size = btn.dataset.size;
                let cart = JSON.parse(localStorage.getItem('cart')) || [];
                const item = cart.find(i => i.name === name && i.size === size);
                if (item && item.qty > 1) {
                    item.qty--;
                } else {
                    cart = cart.filter(i => !(i.name === name && i.size === size));
                }
                localStorage.setItem('cart', JSON.stringify(cart));
                updateMiniCart();
                renderCartModal();
                if (cart.length === 0) cartModal.style.display = 'none';
            });
        });
    }
});
